/**
 * Theme Name: SEEM
 * Description: A custom WordPress theme built for the Southeast Energy Exchange Market
 * Theme URI: https://www.southeastenergymarket.com
 * Author: Scott Shealy
 * Author URI: https://www.scottshealy.com
 * GitHub Theme URI: https://www.github.com/vsshealy/seem.git
 * Version: 1.0.0
 * License: GNU General Public v3 or Later
 * License URI: http://www.gnu.org/license/gpl-3.0.html
**/

/**
    * sass/variables/master.scss
    * @package seem
    * @author Scott Shealy
    * @version 1.0.0
    * @copyright 02/21
**/

/**
    * sass/variables/colors/black.scss
    * @package seem
    * @author Scott Shealy
    * @version 1.0.0
    * @copyright 02/21
**/

/**
    * sass/variables/colors/grayscale.scss
    * @package seem
    * @author Scott Shealy
    * @version 1.0.0
    * @copyright 02/21
**/

/**
    * sass/variables/colors/seem.scss
    * @package seem
    * @author Scott Shealy
    * @version 1.0.0
    * @copyright 02/21
**/

/**
    * sass/variables/units/grids.scss
    * @package seem
    * @author Scott Shealy
    * @version 1.0.0
    * @copyright 02/21
**/

/**
    * sass/variables/units/margins.scss
    * @package seem
    * @author Scott Shealy
    * @version 1.0.0
    * @copyright 02/21
**/

/**
    * sass/variables/units/paddings.scss
    * @package seem
    * @author Scott Shealy
    * @version 1.0.0
    * @copyright 02/21
**/

/**
    * sass/variables/text/font-sizes.scss
    * @package seem
    * @author Scott Shealy
    * @version 1.0.0
    * @copyright 02/21
**/

/**
    * sass/variables/text/letter-spacing.scss
    * @package seem
    * @author Scott Shealy
    * @version 1.0.0
    * @copyright 02/21
**/

/**
    * sass/variables/text/line-height.scss
    * @package seem
    * @author Scott Shealy
    * @version 1.0.0
    * @copyright 02/21
**/

/**
    * sass/variables/text/headings.scss
    * @package seem
    * @author Scott Shealy
    * @version 1.0.0
    * @copyright 02/21
**/

/**
    * sass/variables/text/body.scss
    * @package seem
    * @author Scott Shealy
    * @version 1.0.0
    * @copyright 02/21
**/

/**
    * sass/variables/lists/text.scss
    * @package seem
    * @author Scott Shealy
    * @version 1.0.0
    * @copyright 02/21
**/

/**
    * sass/variables/lists/buttons.scss
    * @package seem
    * @author Scott Shealy
    * @version 1.0.0
    * @copyright 02/21
**/

/**
    * sass/variables/media/browsers.scss
    * @package seem
    * @author Scott Shealy
    * @version 1.0.0
    * @copyright 02/21
**/

/**
    * sass/variables/media/devices.scss
    * @package seem
    * @author Scott Shealy
    * @version 1.0.0
    * @copyright 02/21
**/

/**
    * sass/variables/media/displays.scss
    * @package seem
    * @author Scott Shealy
    * @version 1.0.0
    * @copyright 02/21
**/

/**
    * sass/variables/media/menus.scss
    * @package seem
    * @author Scott Shealy
    * @version 1.0.0
    * @copyright 02/21
**/

/**
    * sass/variables/media/screens.scss
    * @package seem
    * @author Scott Shealy
    * @version 1.0.0
    * @copyright 02/21
**/

/**
    * sass/variables/images/logos.scss
    * @package seem
    * @author Scott Shealy
    * @version 1.0.0
    * @copyright 02/21
**/

/**
    * sass/variables/objects/borders.scss
    * @package seem
    * @author Scott Shealy
    * @version 1.0.0
    * @copyright 02/21
**/

/**
    * sass/variables/objects/buttons.scss
    * @package seem
    * @author Scott Shealy
    * @version 1.0.0
    * @copyright 02/21
**/

/**
    * sass/variables/objects/forms.scss
    * @package seem
    * @author Scott Shealy
    * @version 1.0.0
    * @copyright 02/21
**/

/**
    * sass/variables/objects/shadows.scss
    * @package seem
    * @author Scott Shealy
    * @version 1.0.0
    * @copyright 02/21
**/

/**
    * sass/external/bootstrap/main.scss
    * @package seem
    * @author Scott Shealy
    * @version 1.0.0
    * @copyright 02/21
**/

/**
    * sass/external/bootstrap/lists.scss
    * @package seem
    * @author Scott Shealy
    * @version 1.0.0
    * @copyright 02/21
**/

/**
    * sass/external/bootstrap/general.scss
    * @package seem
    * @author Scott Shealy
    * @version 1.0.0
    * @copyright 02/21
**/

.row {
  margin-left: 0rem;
  margin-right: 0rem;
}

/**
    * sass/external/bootstrap/columns.scss
    * @package seem
    * @author Scott Shealy
    * @version 1.0.0
    * @copyright 02/21
**/

.col-xs-1,
.col-xs-2,
.col-xs-3,
.col-xs-4,
.col-xs-5,
.col-xs-6,
.col-xs-7,
.col-xs-8,
.col-xs-9,
.col-xs-10,
.col-xs-11,
.col-xs-12,
.col-sm-1,
.col-sm-2,
.col-sm-3,
.col-sm-4,
.col-sm-5,
.col-sm-6,
.col-sm-7,
.col-sm-8,
.col-sm-9,
.col-sm-10,
.col-sm-11,
.col-sm-12,
.col-md-1,
.col-md-2,
.col-md-3,
.col-md-4,
.col-md-5,
.col-md-6,
.col-md-7,
.col-md-8,
.col-md-9,
.col-md-10,
.col-md-11,
.col-md-12,
.col-lg-1,
.col-lg-2,
.col-lg-3,
.col-lg-4,
.col-lg-5,
.col-lg-6,
.col-lg-7,
.col-lg-8,
.col-lg-9,
.col-lg-10,
.col-lg-11,
.col-lg-12,
.col-xl-1,
.col-xl-2,
.col-xl-3,
.col-xl-4,
.col-xl-5,
.col-xl-6,
.col-xl-7,
.col-xl-8,
.col-xl-9,
.col-xl-10,
.col-xl-11,
.col-xl-12 {
  padding-left: 1rem;
  padding-right: 1rem;
}

/**
    * sass/external/font-awesome/main.scss
    * @package seem
    * @author Scott Shealy
    * @version 1.0.0
    * @copyright 02/21
**/

/**
    * sass/external/font-awesome/classes.scss
    * @package seem
    * @author Scott Shealy
    * @version 1.0.0
    * @copyright 02/21
**/

.fa-li {
  position: relative;
  left: 0.00rem;
  margin: 0rem 0.5rem;
}

/**
    * sass/external/font-awesome/icons.scss
    * @package seem
    * @author Scott Shealy
    * @version 1.0.0
    * @copyright 02/21
**/

/**
    * sass/theme/master.scss
    * @package seem
    * @author Scott Shealy
    * @version 1.0.0
    * @copyright 02/21
**/

/**
    * sass/theme/site/global.scss
    * @package seem
    * @author Scott Shealy
    * @version 1.0.0
    * @copyright 02/21
**/

* {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}

html {
  width: 100.00vw;
}

body {
  width: 100.00%;
  margin: 0rem;
  padding: 0rem;
  background-color: white;
  font-family: "Open Sans", Helvetica, Arial, sans-serif;
  font-weight: 400;
  letter-spacing: 0px;
  line-height: 1.5;
  text-align: left;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  color: #555555;
}

/**
    * sass/theme/text/body.scss
    * @package seem
    * @author Scott Shealy
    * @version 1.0.0
    * @copyright 02/21
**/

p,
.p,
li,
.li,
span,
.span {
  font-family: "Open Sans", Helvetica, Arial, sans-serif;
  font-size: 1em;
  line-height: 1.5;
  letter-spacing: 0px;
  color: #555555;
}

p,
.p {
  margin: 1rem;
}

li,
.li {
  margin: 0.5rem 0rem;
}

/**
    * sass/theme/text/headings.scss
    * @package seem
    * @author Scott Shealy
    * @version 1.0.0
    * @copyright 02/21
**/

h1,
.h1,
h2,
.h2,
h3,
.h3,
h4,
.h4,
h5,
.h5,
h6,
.h6 {
  font-family: "Roboto Slab", Georgia, serif;
  line-height: 1.25;
  letter-spacing: 0px;
  color: #2b2b2b;
  margin: 2rem 0rem;
}

h1,
.h1 {
  font-size: 2.25em;
}

h2,
.h2 {
  font-size: 2em;
}

h3,
.h3 {
  font-size: 1.75em;
}

h4,
.h4 {
  font-size: 1.5em;
}

h5,
.h5 {
  font-size: 1.25em;
}

h6,
.h6 {
  font-size: 1em;
}

/**
    * sass/theme/text/links.scss
    * @package seem
    * @author Scott Shealy
    * @version 1.0.0
    * @copyright 02/21
**/

a {
  text-decoration: none;
  color: #56d66e;
}

a:hover {
  text-decoration: none;
  color: #398f49;
  cursor: pointer;
}

a.link-address {
  color: inherit;
}

a.link-address:hover {
  text-decoration: none;
  color: #398f49;
  cursor: pointer;
}

a.link-phone {
  color: inherit;
  cursor: default;
}

a.link-phone:hover {
  color: inherit;
  cursor: default;
}

/**
    * sass/theme/text/icons.scss
    * @package seem
    * @author Scott Shealy
    * @version 1.0.0
    * @copyright 02/21
**/

/**
    * sass/theme/layouts/clearfix.scss
    * @package seem
    * @author Scott Shealy
    * @version 1.0.0
    * @copyright 02/21
**/

.clear {
  clear: both;
}

.clearfix {
  zoom: 1;
}

.clearfix:before,
.clearfix:after {
  content: "";
  display: table;
}

.clearfix:after {
  clear: both;
}

/**
    * sass/theme/layouts/devices.scss
    * @package seem
    * @author Scott Shealy
    * @version 1.0.0
    * @copyright 02/21
**/

.phone-hide {
  display: inherit;
}

.phone-show {
  display: none;
}

.tablet-hide {
  display: inherit;
}

.tablet-show {
  display: none;
}

.mobile-hide {
  display: inherit;
}

.mobile-show {
  display: none;
}

.desktop-hide {
  display: inherit;
}

.desktop-show {
  display: none;
}

.desktop-sm-hide {
  display: inherit;
}

.desktop-sm-show {
  display: none;
}

.desktop-md-hide {
  display: inherit;
}

.desktop-md-show {
  display: none;
}

.desktop-lg-hide {
  display: inherit;
}

.desktop-lg-show {
  display: none;
}

.desktop-xl-hide {
  display: inherit;
}

.desktop-xl-show {
  display: none;
}

/**
    * sass/theme/layouts/flexbox.scss
    * @package seem
    * @author Scott Shealy
    * @version 1.0.0
    * @copyright 02/21
**/

.flexbox {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

.flexbox-row {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
  -ms-flex-direction: row;
  flex-direction: row;
}

.flexbox-row-reverse {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: reverse;
  -ms-flex-direction: row-reverse;
  flex-direction: row-reverse;
}

.flexbox-column {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
}

.flexbox-column-reverse {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: reverse;
  -ms-flex-direction: column-reverse;
  flex-direction: column-reverse;
}

.flexbox-horizontal-left {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
  -ms-flex-pack: start;
  justify-content: flex-start;
}

.flexbox-horizontal-right {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: end;
  -ms-flex-pack: end;
  justify-content: flex-end;
}

.flexbox-horizontal-center {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.flexbox-horizontal-spacebetween {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.flexbox-horizontal-spacearound {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: distribute;
  justify-content: space-around;
}

.flexbox-vertical-top {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: start;
  -ms-flex-align: start;
  align-items: flex-start;
}

.flexbox-vertical-bottom {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: end;
  -ms-flex-align: end;
  align-items: flex-end;
}

.flexbox-vertical-center {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.flexbox-vertical-baseline {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: baseline;
  -ms-flex-align: baseline;
  align-items: baseline;
}

.flexbox-vertical-stretch {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
}

.flexbox-vertical-spacebetween {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-align: space-between;
  -ms-flex-align: space-between;
  align-items: space-between;
}

.flexbox-vertical-spacearound {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-align: space-around;
  -ms-flex-align: space-around;
  align-items: space-around;
}

.flexbox-center-all {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.flexbox-wrap {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.flexbox-wrap-none {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
}

.flexbox-wrap-reverse {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap-reverse;
  flex-wrap: wrap-reverse;
}

/**
    * sass/theme/layouts/wrappers.scss
    * @package seem
    * @author Scott Shealy
    * @version 1.0.0
    * @copyright 02/21
**/

.wrapper-full,
.wrapper-full-screen {
  width: 100.00%;
  min-width: 100.00%;
  max-width: 100.00%;
  margin: 0.00rem auto;
}

.wrapper-full-screen {
  height: 100vh !important;
  margin: 0.00rem auto;
}

.wrapper-content {
  width: 100%;
  max-width: 960px !important;
  margin: 0.00rem auto;
}

.wrapper-header {
  width: 100.00%;
  margin: 0.00rem auto;
  padding: 1rem;
}

.wrapper-footer {
  width: 100.00%;
  margin: 0.00rem auto;
  padding: 1rem;
}

.wrapper-section {
  width: 100.00%;
  margin: 0.00rem auto;
  padding: 4rem 0rem;
}

.wrapper-banner {
  width: 100.00%;
  margin: 0.00rem auto;
  padding: 6rem;
}

.wrapper-none {
  width: 100.00%;
  margin: 0.00rem auto;
  padding: 0rem;
}

/**
    * sass/theme/objects/buttons.scss
    * @package seem
    * @author Scott Shealy
    * @version 1.0.0
    * @copyright 02/21
**/

.button,
.button-solid,
.button-mobile,
.button-alt,
.button-ghost,
.button-mobile,
.button-form,
.elementor-button,
.btn-slider,
input.wpcf7-form-control.wpcf7.submit {
  display: inline-block;
  margin: 2rem 0.5rem;
  padding: 0.5rem 2rem;
  border-radius: 0rem;
  font-family: "Open Sans", Helvetica, Arial, sans-serif;
  font-size: 1em;
  text-align: center;
  text-transform: none;
}

.button:hover,
.button-solid:hover,
.button-mobile:hover,
.button-alt:hover,
.button-ghost:hover,
.button-mobile:hover,
.button-form:hover,
.elementor-button:hover,
.btn-slider:hover,
input.wpcf7-form-control.wpcf7.submit:hover {
  cursor: pointer;
}

.button i,
.button-solid i,
.button-mobile i,
.button-alt i,
.button-ghost i,
.button-mobile i,
.button-form i,
.elementor-button i,
.btn-slider i,
input.wpcf7-form-control.wpcf7.submit i {
  display: inline-block;
  margin-left: 0rem;
  margin-right: 0.5rem;
}

.button-solid,
.button-mobile,
.button .elementor-button,
.button .btn-slider,
.button input.wpcf7.form-control.wpcf7.submit {
  background-color: #56d66e;
  color: white;
  border: 1px solid #41a153;
}

.button-solid:hover,
.button-mobile:hover,
.button .elementor-button:hover,
.button .btn-slider:hover,
.button input.wpcf7.form-control.wpcf7.submit:hover {
  background-color: #41a153;
  color: white;
  border: 1px solid #41a153;
}

.button-alt {
  background-color: white;
  color: #56d66e;
  border: 1px solid #56d66e;
}

.button-alt:hover {
  background-color: #56d66e;
  color: white;
  border: 1px solid #56d66e;
}

.button-ghost {
  background-color: transparent;
  color: #56d66e;
  border: 1px solid #56d66e;
}

.button-ghost:hover {
  background-color: #56d66e;
  color: white;
  border: 1px solid #56d66e;
}

.button-mobile {
  display: block;
  text-transform: uppercase;
}

/**
    * sass/theme/objects/images.scss
    * @package seem
    * @author Scott Shealy
    * @version 1.0.0
    * @copyright 02/21
**/

.image-responsive {
  height: 0.00rem;
  position: relative;
  padding-top: 30px;
  padding-bottom: 56.25%;
  overflow: hidden;
}

.image-responsive img {
  height: 100.00%;
  width: 100.00%;
  position: absolute;
  top: 0.00%;
  left: 0.00%;
}

/**
    * sass/theme/objects/videos.scss
    * @package seem
    * @author Scott Shealy
    * @version 1.0.0
    * @copyright 02/21
**/

.video-responsive {
  height: 0.00rem;
  position: relative;
  padding-top: 30px;
  padding-bottom: 56.25%;
  overflow: hidden;
}

.video-responsive iframe,
.video-responsive object,
.video-responsive embed {
  height: 100.00%;
  width: 100.00%;
  position: absolute;
  top: 0.00%;
  left: 0.00%;
}

/**
    * sass/plugins/elementor/elements.scss
    * @package seem
    * @author Scott Shealy
    * @version 1.0.0
    * @copyright 02/21
**/

.elementor-element-populated {
  padding: 0rem !important;
}

.elementor-widget-wp-widget-phpeverywherewidget .elementor-widget-container h1,
.elementor-widget-wp-widget-phpeverywherewidget .elementor-widget-container .h1,
.elementor-widget-wp-widget-phpeverywherewidget .elementor-widget-container h2,
.elementor-widget-wp-widget-phpeverywherewidget .elementor-widget-container .h2,
.elementor-widget-wp-widget-phpeverywherewidget .elementor-widget-container h3,
.elementor-widget-wp-widget-phpeverywherewidget .elementor-widget-container .h3,
.elementor-widget-wp-widget-phpeverywherewidget .elementor-widget-container h4,
.elementor-widget-wp-widget-phpeverywherewidget .elementor-widget-container .h4,
.elementor-widget-wp-widget-phpeverywherewidget .elementor-widget-container h5,
.elementor-widget-wp-widget-phpeverywherewidget .elementor-widget-container .h5,
.elementor-widget-wp-widget-phpeverywherewidget .elementor-widget-container h6,
.elementor-widget-wp-widget-phpeverywherewidget .elementor-widget-container .h6 {
  display: none;
}

/**
    * sass/parts/header.scss
    * @package seem
    * @author Scott Shealy
    * @version 1.0.0
    * @copyright 02/21
**/

header#header-primary {
  background-color: white;
}

header#header-primary #header-desktop-logo a {
  display: block;
}

header#header-primary #header-desktop-logo a img {
  width: 152px;
}

header#header-primary #header-desktop-nav {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: end;
  -ms-flex-pack: end;
  justify-content: flex-end;
}

header#header-primary #header-desktop-nav nav.columns {
  padding: 0rem;
}

header#header-primary #header-desktop-nav nav.columns .menu-header-top-container ul,
header#header-primary #header-desktop-nav nav.columns .menu-header-primary-container ul {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
  -ms-flex-direction: row;
  flex-direction: row;
  margin: 0rem;
  padding: 0rem;
  list-style: none;
}

header#header-primary #header-desktop-nav nav.columns .menu-header-top-container ul li,
header#header-primary #header-desktop-nav nav.columns .menu-header-primary-container ul li {
  margin: 0rem 0.5rem;
}

header#header-primary #header-desktop-nav nav.columns .menu-header-top-container ul li a,
header#header-primary #header-desktop-nav nav.columns .menu-header-primary-container ul li a {
  font-weight: 700;
  color: #555555;
}

header#header-primary #header-desktop-nav nav.columns .menu-header-top-container ul li a:hover,
header#header-primary #header-desktop-nav nav.columns .menu-header-primary-container ul li a:hover {
  color: #56d66e;
}

header#header-primary #header-desktop-nav-top {
  margin: 0.5rem 0rem;
}

header#header-primary #header-desktop-nav-top nav.columns .menu-header-top-container ul {
  -webkit-box-pack: end;
  -ms-flex-pack: end;
  justify-content: flex-end;
}

header#header-primary #header-desktop-nav-primary {
  margin: 0.5rem 0rem;
}

header#header-primary #header-desktop-nav-primary nav.columns .menu-header-primary-container ul {
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */

@media (min-width: 576px) {
  body {
    font-size: 14px;
  }

  .button-mobile {
    display: none !important;
  }
}

@media (min-width: 768px) {
  body {
    font-size: 14px;
  }
}

@media (min-width: 992px) {
  body {
    font-size: 16px;
  }

  .desktop-hide {
    display: none;
  }

  .desktop-show {
    display: inherit;
  }

  .desktop-sm-hide {
    display: none;
  }

  .desktop-sm-show {
    display: inherit;
  }

  header#header-primary #header-desktop {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
  }

  header#header-primary #header-mobile {
    display: none;
  }
}

@media (min-width: 1200px) {
  body {
    font-size: 16px;
  }

  .desktop-md-hide {
    display: none;
  }

  .desktop-md-show {
    display: inherit;
  }
}

@media (min-width: 1920px) {
  .desktop-lg-hide {
    display: none;
  }

  .desktop-lg-show {
    display: inherit;
  }
}

@media (min-width: 3840px) {
  .desktop-xl-hide {
    display: none;
  }

  .desktop-xl-show {
    display: inherit;
  }
}

@media (max-width: 991px) {
  .mobile-hide {
    display: none;
  }

  .mobile-show {
    display: inherit;
  }

  .wrapper-content {
    width: 100.00%;
  }

  header#header-primary #header-desktop {
    display: none;
  }
}

@media (max-width: 575px) {
  body {
    font-size: 14px;
  }

  .phone-hide {
    display: none;
  }

  .phone-show {
    display: inherit;
  }
}

@media (min-width: 576px) and (max-width: 991px) {
  .tablet-hide {
    display: none;
  }

  .tablet-show {
    display: inherit;
  }
}